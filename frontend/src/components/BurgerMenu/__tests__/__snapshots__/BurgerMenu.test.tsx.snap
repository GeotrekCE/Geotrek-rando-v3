// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`AAU, I can see a BurgerMenu 1`] = `
Object {
  "asFragment": [Function],
  "baseElement": <body>
    <div>
      <div>
        <div
          class="bm-overlay"
          style="position: fixed; z-index: 1000; width: 100%; height: 100%; background: rgba(0, 0, 0, 0.3); opacity: 0; transform: translate3d(100%, 0, 0); transition: opacity 0.3s, transform 0s 0.3s;"
        />
        <div>
          <div
            class="bm-burger-button fixed w-5 h-3 top-4 right-3"
            style="z-index: 1000;"
          >
            <button
              id="react-burger-menu-btn"
              style="position: absolute; left: 0px; top: 0px; z-index: 1; width: 100%; height: 100%; margin: 0px; padding: 0px; font-size: 0px; background: transparent; cursor: pointer;"
            >
              Open Menu
            </button>
            <span>
              <span
                class="bm-burger-bars bg-white"
                style="position: absolute; height: 20%; left: 0px; right: 0px; top: 0%; opacity: 1;"
              />
              <span
                class="bm-burger-bars bg-white"
                style="position: absolute; height: 20%; left: 0px; right: 0px; top: 40%; opacity: 1;"
              />
              <span
                class="bm-burger-bars bg-white"
                style="position: absolute; height: 20%; left: 0px; right: 0px; top: 80%; opacity: 1;"
              />
            </span>
          </div>
        </div>
        <div
          aria-hidden="true"
          class="bm-menu-wrap"
          id=""
          style="position: fixed; right: 0px; z-index: 1100; width: 300px; height: 100%; transform: translate3d(100%, 0, 0); transition: all 0.5s;"
        >
          <div
            class="bm-menu bg-white"
            style="height: 100%; box-sizing: border-box; overflow: auto;"
          >
            <nav
              class="bm-item-list"
              style="height: 100%;"
            />
          </div>
          <div>
            <div
              class="bm-cross-button left-3"
              style="position: absolute; width: 24px; height: 24px; right: 8px; top: 8px;"
            >
              <button
                id="react-burger-cross-btn"
                style="position: absolute; left: 0px; top: 0px; z-index: 1; width: 100%; height: 100%; margin: 0px; padding: 0px; font-size: 0px; background: transparent; cursor: pointer;"
                tabindex="-1"
              >
                Close Menu
              </button>
              <span
                style="position: absolute; top: 6px; right: 14px;"
              >
                <span
                  class="bm-cross bg-greyDarkColored"
                  style="position: absolute; width: 3px; height: 14px; transform: rotate(45deg);"
                />
                <span
                  class="bm-cross bg-greyDarkColored"
                  style="position: absolute; width: 3px; height: 14px; transform: rotate(-45deg);"
                />
              </span>
            </div>
          </div>
        </div>
      </div>
    </div>
  </body>,
  "container": <div>
    <div>
      <div
        class="bm-overlay"
        style="position: fixed; z-index: 1000; width: 100%; height: 100%; background: rgba(0, 0, 0, 0.3); opacity: 0; transform: translate3d(100%, 0, 0); transition: opacity 0.3s, transform 0s 0.3s;"
      />
      <div>
        <div
          class="bm-burger-button fixed w-5 h-3 top-4 right-3"
          style="z-index: 1000;"
        >
          <button
            id="react-burger-menu-btn"
            style="position: absolute; left: 0px; top: 0px; z-index: 1; width: 100%; height: 100%; margin: 0px; padding: 0px; font-size: 0px; background: transparent; cursor: pointer;"
          >
            Open Menu
          </button>
          <span>
            <span
              class="bm-burger-bars bg-white"
              style="position: absolute; height: 20%; left: 0px; right: 0px; top: 0%; opacity: 1;"
            />
            <span
              class="bm-burger-bars bg-white"
              style="position: absolute; height: 20%; left: 0px; right: 0px; top: 40%; opacity: 1;"
            />
            <span
              class="bm-burger-bars bg-white"
              style="position: absolute; height: 20%; left: 0px; right: 0px; top: 80%; opacity: 1;"
            />
          </span>
        </div>
      </div>
      <div
        aria-hidden="true"
        class="bm-menu-wrap"
        id=""
        style="position: fixed; right: 0px; z-index: 1100; width: 300px; height: 100%; transform: translate3d(100%, 0, 0); transition: all 0.5s;"
      >
        <div
          class="bm-menu bg-white"
          style="height: 100%; box-sizing: border-box; overflow: auto;"
        >
          <nav
            class="bm-item-list"
            style="height: 100%;"
          />
        </div>
        <div>
          <div
            class="bm-cross-button left-3"
            style="position: absolute; width: 24px; height: 24px; right: 8px; top: 8px;"
          >
            <button
              id="react-burger-cross-btn"
              style="position: absolute; left: 0px; top: 0px; z-index: 1; width: 100%; height: 100%; margin: 0px; padding: 0px; font-size: 0px; background: transparent; cursor: pointer;"
              tabindex="-1"
            >
              Close Menu
            </button>
            <span
              style="position: absolute; top: 6px; right: 14px;"
            >
              <span
                class="bm-cross bg-greyDarkColored"
                style="position: absolute; width: 3px; height: 14px; transform: rotate(45deg);"
              />
              <span
                class="bm-cross bg-greyDarkColored"
                style="position: absolute; width: 3px; height: 14px; transform: rotate(-45deg);"
              />
            </span>
          </div>
        </div>
      </div>
    </div>
  </div>,
  "debug": [Function],
  "findAllByAltText": [Function],
  "findAllByDisplayValue": [Function],
  "findAllByLabelText": [Function],
  "findAllByPlaceholderText": [Function],
  "findAllByRole": [Function],
  "findAllByTestId": [Function],
  "findAllByText": [Function],
  "findAllByTitle": [Function],
  "findByAltText": [Function],
  "findByDisplayValue": [Function],
  "findByLabelText": [Function],
  "findByPlaceholderText": [Function],
  "findByRole": [Function],
  "findByTestId": [Function],
  "findByText": [Function],
  "findByTitle": [Function],
  "getAllByAltText": [Function],
  "getAllByDisplayValue": [Function],
  "getAllByLabelText": [Function],
  "getAllByPlaceholderText": [Function],
  "getAllByRole": [Function],
  "getAllByTestId": [Function],
  "getAllByText": [Function],
  "getAllByTitle": [Function],
  "getByAltText": [Function],
  "getByDisplayValue": [Function],
  "getByLabelText": [Function],
  "getByPlaceholderText": [Function],
  "getByRole": [Function],
  "getByTestId": [Function],
  "getByText": [Function],
  "getByTitle": [Function],
  "queryAllByAltText": [Function],
  "queryAllByDisplayValue": [Function],
  "queryAllByLabelText": [Function],
  "queryAllByPlaceholderText": [Function],
  "queryAllByRole": [Function],
  "queryAllByTestId": [Function],
  "queryAllByText": [Function],
  "queryAllByTitle": [Function],
  "queryByAltText": [Function],
  "queryByDisplayValue": [Function],
  "queryByLabelText": [Function],
  "queryByPlaceholderText": [Function],
  "queryByRole": [Function],
  "queryByTestId": [Function],
  "queryByText": [Function],
  "queryByTitle": [Function],
  "rerender": [Function],
  "unmount": [Function],
}
`;
